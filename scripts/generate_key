#!/usr/bin/env python3
import secrets
import json
import hashlib
from datetime import datetime
import argparse


def generate_api_key() -> str:
    """
    Generate a secure random key
    """
    return secrets.token_urlsafe(32)


def hash_api_key(api_key: str) -> str:
    """
    SHA-256 hash a key
    """
    return hashlib.sha256(api_key.encode()).hexdigest()


def save_api_keys(api_key: dict, filename: str = "api_keys.json"):
    """
    Save API keys to a JSON file
    """
    data = {
        "generated_at": datetime.now().isoformat(),
        "api_keys": api_key
    }
    
    with open(filename, 'w') as f:
        json.dump(data, f, indent=4)
    
    print(f"keys saved to '{filename}'.")


def main():
    parser = argparse.ArgumentParser(description="generate a specific client API key")
    parser.add_argument("--output", "-o", type=str, default="keys.json", help="output filename")
    parser.add_argument("--hash", action="store_true", help="also generate hashed versions")
    
    args = parser.parse_args()
    
    api_key = {
        "key": generate_api_key(),
        "hash": None
    }
        
    if args.hash:
        api_key["hash"] = hash_api_key(api_key["key"])
        
    print(f"key: {api_key}")
    if args.hash:
        print(f"hash: {api_key['hash']}")

    save_api_keys(api_key, args.output)
    
    print("\n")
    print(f"output file: {args.output}")
    print(f"hashed: {'yes' if args.hash else 'no'}")


if __name__ == "__main__":
    main()
